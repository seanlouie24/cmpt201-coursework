#include <pthread.h>
#include <stdio.h>
#include <string.h>

int cnt = 0;

pthread_mutex_t l = PTHREAD_MUTEX_INITIALIZER;

void *threadFunc(void *arg) {
  pthread_mutex_lock(&l);
  for (int i = 0; i < 10000000; i++) {
    cnt++;
  }
  pthread_mutex_unlock(&l);

  return arg;
}

int main() {
  pthread_t thread;
  pthread_t thread2;

  char *msg = "Hello";
  if (pthread_create(&thread, NULL, threadFunc, (void *)msg)) {
    perror("Failed");
    return 1;
  }
  if (pthread_create(&thread2, NULL, threadFunc, (void *)msg)) {
    perror("Failed");
    return 1;
  }

  pthread_join(thread, NULL);
  pthread_join(thread2, NULL);

  printf("%d\n", cnt);
}
