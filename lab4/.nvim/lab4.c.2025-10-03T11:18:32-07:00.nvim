// Cannot use printf could be interference with signals and not work as expected
#define _DEFAULT_SOURCE
#include <errno.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#define BLOCK_SIZE 128
#define HEAP_SIZE 256
#define BUF_SIZE 64

struct header{
  uint64_t size;
  struct header* next;
};

void handle_eror(const char *msg){
  perror(msg);
  exit(EXIT_FAILURE);
}

void print_out(char *format, void *data, size_t data_size) {
  char buf[BUF_SIZE];
  ssize_t len = snprintf(buf, BUF_SIZE, format,
                         data_size == sizeof(uint64_t) ? *(uint64_t *)data
                                                       : *(void **)data);

  if (len < 0) {
    perror("snprintf");
    exit(EXIT_FAILURE);
  }
  write(STDOUT_FILENO, buf, len);
}

void print_block(char *start){
  for (int i = 0; i < BLOCK_SIZE - sizeof(sturct header); i++){
    char *addr = (start + sizeof(struct header) + i);
    uint64_t val = (uint64_t)*addr;
    print_out("%lu\n", &val, sizeof(val));
  }
}

void intialize_block(void *ptr, ssize_t size){

}

int main() {
  char *heap_start = sbrk(0);
  if (sbrk(HEAP_SIZE) == (void *)-1){
    perror("sbrk");
    exit(1);
  }


  // print address of first_block
  // print address of second_block
  // print first_block.size and next
  // print second_block.size and next
  // print all bytes of first_block data
  // print all bytes of second_block data


}
